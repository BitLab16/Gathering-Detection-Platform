version: '3'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:

  ml-service:
    image: bitlab16/ml-service:ml-api
    container_name: ml-service_container
    hostname: ml-service
    networks:
      - kafka-net
    ports:
      - "6001:6000"

  web-app:
    image: bitlab16/web-app:master
    container_name: web-app_container
    build: ../web-app/.
    hostname: web-app
    networks:
      - kafka-net
    ports:
      - "8080:8080"
    depends_on:
      - rest-api

  rest-api:
    image: bitlab16/rest-service:develop
    container_name: rest-api_container
    #build: ../rest-service/.
    hostname: rest-api
    networks:
      - kafka-net
    depends_on:
      - zookeeper
      - kafka1
      - postgres-db
    ports:
      - "5000:5000"

  simulatore:
    image: bitlab16/simulation-service:develop
    container_name: simulatore_container
    #build: ../simulation-service/.
    hostname: simulatore
    networks:
      - kafka-net
    depends_on:
      - kafka1

  postgres-db:
    container_name: db-postgre
    build: .
    networks:
      - kafka-net
    ports:
      - "6543:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper
    networks:
      - kafka-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_MY_ID: 1
      #ZOO_SERVERS: server.1=zookeeper:2888:3888
    
  kafka1:
    image: confluentinc/cp-kafka:6.1.0
    hostname: kafka1
    container_name: kafka1
    networks:
      - kafka-net
    ports:
      - '9092:9092'
      - '19091:19091'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19091,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    depends_on:
      - zookeeper
  
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
