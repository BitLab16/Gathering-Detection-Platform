version: '3'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:

  ml-service:
    image: bitlab16/ml-service:ml-api
    container_name: ml-service_container
    hostname: ml-service
    networks:
      - kafka-net
    ports:
      - "6001:6000"

  web-app:
  #  image: bitlab16/web-app:develop
    container_name: web-app_container
    build: ../web-app/.
    hostname: web-app
    networks:
      - kafka-net
    ports:
      - "8080:8080"
    depends_on:
      - rest-api

  rest-api:
    #image: bitlab16/rest-service:develop
    container_name: rest-api_container
    build: ../rest-service/.
    hostname: rest-api
    networks:
      - kafka-net
    depends_on:
      - zookeeper
      - kafka1
      - postgres-db
    ports:
      - "5000:5000"

  simulatore:
  #  image: bitlab16/simulation-service:develop
    container_name: simulatore_container
    build: ../simulation-service/.
    hostname: simulatore
    networks:
      - kafka-net
    depends_on:
      - kafka1

  postgres-db:
    container_name: db-postgre
    build: .
    networks:
      - kafka-net
    ports:
      - "6543:5432"

  zookeeper:
    container_name: kafka-zookeeper
    image: 'bitnami/zookeeper:3'
    networks:
      - kafka-net
    ports: 
      - '2181:2181'
    environment: 
      - ALLOW_ANONYMOUS_LOGIN=yes  
    
  kafka1:
    container_name: kafka1
    image: 'bitnami/kafka:2'
    networks:
      - kafka-net
    ports: 
      - '9092:9092'
      - '19091:19091'
      - '29094:29094'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_EXT:PLAINTEXT,LISTENER_INT:PLAINTEXT,REMOTE_EXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=LISTENER_EXT://kafka1:9092,LISTENER_INT://kafka1:19091
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:9092,LISTENER_INT://kafka1:19091
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper  
  
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
